@page "/updateCursos/{id:int}"
@using MathSolutionsBlazor.Data

<br />
<br />
<br />
<br />

<div class="tittle">
    <center>
        <div class="tittle_content">
            <h1>ACTUALIZAR CURSO</h1>
        </div>

        <div class="container" style="width: 50%">
            <p class="text-muted">
                Aqui podras actualizar los datos del curso.
            </p>
        </div>
    </center>
</div>

<EditForm Model="@curso">
    <form class="container-border" @onsubmit="Save">
        <center>
            <h1>Actualizar informacion</h1>
        </center>
        <br />
        <center>
            <div class="form-row">
                <div class="form-group col-md-6">
                    <label for="nombre_del_curso">Nombre del curso</label>
                    <InputText type="text" class="form-control" id="nombre_del_curso"
                               placeholder="Nombre del curso a impartir" @bind-Value="@curso.Titulo" />
                </div>
            </div>

            <div class="form-group col-md-6">
                <label for="fecha_de_inicio">Fecha de inicio </label>
                <InputDate class="form-control" id="fecha_de_inicio"
                           placeholder="Fecha de incio del curso" @bind-Value="@curso.FechaInicio" />
            </div>

            <div class="form-group col-md-6">
                <label for="fecha_de_cierre">Fecha de cierre </label>
                <InputDate class="form-control" id="fecha_de_cierre"
                           placeholder="Fehca de cierre del grupo" @bind-Value="@curso.FechaCierre" />
            </div>

            <div class="form-group col-md-6">
                <label for="link_de_la_reunion">Link de la reunion </label>
                <InputText type="text" class="form-control" id="link_de_la_reunion"
                           placeholder="Link de la reunion" @bind-Value="@curso.LinkReunion" />
            </div>


            <div class="form-group col-md-6">
                <label for="material_didactico">Material didactico </label>
                <InputText type="text" class="form-control" id="material_didactico"
                           placeholder="Material didactico" @bind-Value="@curso.Material" />
            </div>

            <div class="form-group col-md-6">
                <label class="col-form-label" for="idprofesor">Profesor</label>
                <InputSelect class="form-control" @bind-Value="@curso.IdProfesor" id="idprofesor">
                    <option value="-1" disabled>Seleccione un maestro...</option>
                    @if (loading)
                    {
                        <option value="0" disabled>Cargando...</option>
                    }
                    else if (profesores != null)
                    {
                        @foreach (var profesor in profesores)
                        {
                            <option value="@profesor.IdProfesor">@profesor.NombreCompleto</option>
                        }
                    }
                </InputSelect>
            </div>

            <div class="form-group col-md-6">
                <label for="descripcion_del_curso">Descripcion del curso: </label>
                <InputTextArea type="text" class="form-control" id="descripcion_del_curso"
                               placeholder="Breve descripcion del curso a impartir" @bind-Value="@curso.Descripcion">
                </InputTextArea>
            </div>
            <br />
        </center>

        <center>
            <button type="submit" @onclick="Save" class="btn btn-outline-dark">Actualizar</button>
            <a class="btn btn-outline-primary" href="/cursos">Cancelar</a>
        </center>
    </form>
</EditForm>


@code {

    [Parameter]

    public int id { get; set; }

    bool loading = true;

    IList<Profesor> profesores;
    IList<Curso> cursos;

    Curso curso = new Curso();

    protected override async Task OnInitializedAsync()
    {
        profesores = await HTTP.GetFromJsonAsync<IList<Profesor>>("/api/CuentaProfesor/TodosLosProfesores");
        cursos = await HTTP.GetFromJsonAsync<IList<Curso>>("/api/Profesor/TodosLosCursos");

        var response = await HTTP.GetFromJsonAsync<Curso>($"/api/Profesor/Curso/{id}");
        if (response != null)
        {
            curso = response;
        }

        loading = false;
    }

    protected async Task Save()
    {
        HttpResponseMessage response;

        response = await HTTP.PutAsJsonAsync<Curso>($"/api/Profesor/ModificarCurso/{id}", curso);

        Curso Saved = response.Content.ReadFromJsonAsync<Curso>().Result;

        NavigationManager.NavigateTo("/cursos");
    }
}
